name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      # This is the version of the action for setting up Python, not the Python version.
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test with pytest
      run: |
        python -m pytest -o junit_family=xunit1 --cov-report xml:coverage-reports/coverage.xml --cov-report html:cov_html --junitxml=test-results/results.xml test.py

    - name: Lint
      run: |
        pylint . --rcfile=.pylintrc --output-format=parseable --fail-under=8 --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"  | tee pylint.log || echo "pylint exited with $?"
      
    - name: SonarQube scan
      uses: sonarsource/sonarqube-scan-action@v2.3.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -X
          -Dproject.settings=sonar-project.properties

    - name: Login to DockerHub Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ARTIFACTORY_HOST }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.ARTIFACTORY_HOST }}/cst-docker-dev/flask-hello-world-sample-github:latest

    - name: Push Docker Image
      run: docker push ${{ secrets.ARTIFACTORY_HOST }}/cst-docker-dev/flask-hello-world-sample-github:latest
