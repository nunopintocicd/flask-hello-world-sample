name: Docker Image CI

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      # This is the version of the action for setting up Python, not the Python version.
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Pytest and Linter
      run: |
        pip install -r requirements.txt
        python -m pytest -o junit_family=xunit1 --cov=./ --cov-report=xml:coverage-reports/coverage.xml --junitxml=test-results/results.xml ./tests/
        pylint ./app --rcfile=.pylintrc --output-format=parseable --fail-under=8 --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"  | tee pylint.log || echo "pylint exited with $?"

    - name: SonarQube scan
      uses: sonarsource/sonarqube-scan-action@v2.3.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -X
          -Dproject.settings=sonar-project.properties

    - name: Login to DockerHub Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ARTIFACTORY_HOST }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.ARTIFACTORY_HOST }}/cst-docker-dev/flask-hello-world-sample-github:${{ github.sha }}

    - name: Push Docker Image
      run: docker push ${{ secrets.ARTIFACTORY_HOST }}/cst-docker-dev/flask-hello-world-sample-github:${{ github.sha }}

  aws:
    runs-on: ubuntu-latest
    needs: build
    dynamodb_scan:
      runs-on: ubuntu-latest
      needs: unit_linter
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::355948091293:role/test_nuno_gitlab'
          aws-region: 'eu-west-1'

      - name: Scan DynamoDB table
        run: aws dynamodb scan --table-name tenant_status

  cd:
    runs-on: ubuntu-latest
    environment: staging
    needs: aws
        steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        sudo apt-get install -y curl

    - name: Lint Helm chart
      run: helm lint ./helm-chart-directory

    - name: Package Helm chart
      run: helm package ./helm-chart-directory --version ${{ github.sha }}

    - name: Index Helm repository
      run: helm repo index ./ --url https://art.pmideep.com/artifactory/cst-helm-dev

    - name: Upload Helm chart
      run: curl -T flask-hello-world-sample-github-${{ github.sha }}.tgz "https://art.pmideep.com/artifactory/cst-helm-dev/flask-hello-world-sample-github-${{ github.sha }}.tgz" --user ${{ secrets.HELM_REPO_USER }}:${{ secrets.HELM_REPO_PASSWORD }}